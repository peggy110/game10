(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const i of e)if(i.type==="childList")for(const r of i.addedNodes)r.tagName==="LINK"&&r.rel==="modulepreload"&&s(r)}).observe(document,{childList:!0,subtree:!0});function h(e){const i={};return e.integrity&&(i.integrity=e.integrity),e.referrerPolicy&&(i.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?i.credentials="include":e.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(e){if(e.ep)return;e.ep=!0;const i=h(e);fetch(e.href,i)}})();class l{constructor(t){this.canvas=t,this.ctx=t.getContext("2d"),this.width=t.width,this.height=t.height,this.player={x:this.width/2-20,y:this.height-40,w:40,h:20,speed:5},this.bullets=[],this.enemies=[],this.score=0,this.left=!1,this.right=!1,this.shooting=!1,this.init()}init(){document.addEventListener("keydown",t=>this.keyDown(t)),document.addEventListener("keyup",t=>this.keyUp(t)),this.spawnEnemy(),requestAnimationFrame(()=>this.loop())}keyDown(t){t.code==="ArrowLeft"&&(this.left=!0),t.code==="ArrowRight"&&(this.right=!0),t.code==="Space"&&(this.shooting=!0)}keyUp(t){t.code==="ArrowLeft"&&(this.left=!1),t.code==="ArrowRight"&&(this.right=!1),t.code==="Space"&&(this.shooting=!1)}spawnEnemy(){const t=Math.random()*(this.width-40);this.enemies.push({x:t,y:0,w:40,h:20,speed:2}),setTimeout(()=>this.spawnEnemy(),1e3)}shoot(){this.bullets.push({x:this.player.x+this.player.w/2-2,y:this.player.y,w:4,h:10,speed:7})}update(){this.left&&(this.player.x-=this.player.speed),this.right&&(this.player.x+=this.player.speed),this.player.x=Math.max(0,Math.min(this.width-this.player.w,this.player.x)),this.shooting&&this.bullets.length<5&&(this.shoot(),this.shooting=!1),this.bullets.forEach(t=>t.y-=t.speed),this.bullets=this.bullets.filter(t=>t.y>-t.h),this.enemies.forEach(t=>t.y+=t.speed),this.enemies=this.enemies.filter(t=>t.y<this.height+t.h),this.bullets.forEach((t,h)=>{this.enemies.forEach((s,e)=>{t.x<s.x+s.w&&t.x+t.w>s.x&&t.y<s.y+s.h&&t.y+t.h>s.y&&(this.bullets.splice(h,1),this.enemies.splice(e,1),this.score++)})})}draw(){this.ctx.clearRect(0,0,this.width,this.height),this.ctx.fillStyle="#09f",this.ctx.fillRect(this.player.x,this.player.y,this.player.w,this.player.h),this.ctx.fillStyle="#ff0",this.bullets.forEach(t=>this.ctx.fillRect(t.x,t.y,t.w,t.h)),this.ctx.fillStyle="#f44",this.enemies.forEach(t=>this.ctx.fillRect(t.x,t.y,t.w,t.h)),this.ctx.fillStyle="#fff",this.ctx.font="20px Arial",this.ctx.fillText("Score: "+this.score,10,30)}loop(){this.update(),this.draw(),requestAnimationFrame(()=>this.loop())}}const n=document.querySelector("#app");n.innerHTML='<canvas id="gameCanvas" width="480" height="640" style="background:#222;display:block;margin:0 auto;"></canvas>';const a=document.getElementById("gameCanvas");new l(a);
